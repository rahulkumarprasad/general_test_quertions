# Online Python compiler (interpreter) to run Python online.
# Write Python 3 code in this online editor and run it.
"""
You are given an array nums of length n and a positive integer k.
A subarray (CONTIGOUS ARRAY) of nums is called good if the absolute difference between its first and last element is exactly k, in other words, the subarray nums[i..j] is good if |nums[i] - nums[j]| == k.

Return the maximum sum of a good subarray of nums. If there are no good subarrays, return 0.
 
Example 1:
Input: nums = [1,2,3,4,5,6], k = 1
Output: 11
Explanation: The absolute difference between the first and last element must be 1 for a good subarray. All the good subarrays are: [1,2], [2,3], [3,4], [4,5], and [5,6]. The maximum subarray sum is 11 for the subarray [5,6].
"""

print("Try programiz.pro")


# Online Python compiler (interpreter) to run Python online.
# Write Python 3 code in this online editor and run it.
print("Try programiz.pro")

print("Try programiz.pro")

def subarray(arr, k):
    equal_to_k_result = []
    
    for i in range(len(arr)):
        sm = arr[i]
        j = i+1
        while(j<len(arr)):
            sm = abs(abs(sm) - abs(arr[j]))
            print("sub =",i,j, arr[j], sm)
            if sm == k:
                equal_to_k_result.append([i,j])
            j+=1
        
            greater = 0
    
    print(equal_to_k_result)
    sum_all = []
    
    if len(equal_to_k_result) == 0:
        return 0
    else:
        for ind in equal_to_k_result:
            start = ind[0]
            end = ind[1]
            sm2 = 0
            while(start<=end):
                sm2+=abs(arr[start])
                start+=1
            
            sum_all.append(sm2)
            if sm2 > greater:
                greater = sm2
       
        return greater
    
print((subarray([-11,-12,-23,-2,4,5,6], 3)))
